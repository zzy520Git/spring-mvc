<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!--
    该注解驱动的作用：
    1.默认加载JSON转换器
    2.默认加载处理器映射器和处理器适配器
  -->
  <mvc:annotation-driven>
    <mvc:message-converters register-defaults="true">
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8"/>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>

  <!-- 用于支持访问静态资源，因为dispatcher的url映射配置的"/" -->
  <mvc:default-servlet-handler/>
  <!-- 上面等价于配置静态资源的映射不经过前端控制器 -->
  <!--
  <mvc:resources mapping="/assets/**" location="/assets/"/>
  -->

  <!-- 拦截器 -->
  <mvc:interceptors>
    <!--多个拦截器,顺序执行 -->
    <mvc:interceptor>
      <!-- /**表示所有url包括子url路径 -->
      <mvc:mapping path="/**"/>
      <mvc:exclude-mapping path="/assets/**"/>
      <mvc:exclude-mapping path="/css/**"/>
      <mvc:exclude-mapping path="/js/**"/>
      <bean class="notes.mvc.web.interceptor.LoginInterceptor"/>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <mvc:exclude-mapping path="/assets/**"/>
      <mvc:exclude-mapping path="/css/**"/>
      <mvc:exclude-mapping path="/js/**"/>
      <bean class="notes.mvc.web.interceptor.ContextInterceptor"/>
      <!-- 这样引用拦截器也可以
      <bean ref="beanId"/>
      -->
    </mvc:interceptor>
  </mvc:interceptors>

  <!-- 文件上传：前端页面如果是表单，则表单需要配置multipart/form-data -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="maxUploadSize" value="400000000"/>
  </bean>

  <!-- 如果有自定义参数绑定，需加上以下代码 -->
  <mvc:annotation-driven conversion-service="conversionService"/>
  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <property name="converters">
      <set>
        <bean class="notes.mvc.web.converter.CustomDateConverter"/>
        <!--
        <bean class=".."/>
        -->
      </set>
    </property>
  </bean>

  <!-- 自定义的全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器，只能存在一个 -->
  <bean class="notes.mvc.web.resolver.CustomExceptionResolver"/>

</beans>